// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3925.Rafiki.commands;

import org.usfirst.frc3925.Rafiki.Robot;
import org.usfirst.frc3925.Rafiki.helper.XboxHelper;
import org.usfirst.frc3925.Rafiki.helper.XboxHelper.CurrentXbox;
import org.usfirst.frc3925.Rafiki.subsystems.Intake;
import org.usfirst.frc3925.Rafiki.subsystems.Intake.IntakeState;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class  IntakeControl extends Command {
	Intake intake = Robot.intake;
	
	double intakeSpeeds = 0;
	
    public IntakeControl() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.intake);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	intake.setState(IntakeState.OPEN);
    	intake.setRawSpeeds(0);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	if (XboxHelper.getButton(CurrentXbox.SHOOTER, XboxHelper.TRIGGER_RT)) {
			intake.setState(IntakeState.OPEN);
		}
    	if (XboxHelper.getButton(CurrentXbox.SHOOTER, XboxHelper.TRIGGER_LT)) {
    		intake.setState(IntakeState.CLOSED);
    	}
    	
    	double axisLeft = XboxHelper.getAxis(CurrentXbox.SHOOTER, XboxHelper.AXIS_TRIGGER_RIGHT);
    	double axisRight = XboxHelper.getAxis(CurrentXbox.SHOOTER, XboxHelper.AXIS_TRIGGER_RIGHT);
    	
    	if (axisLeft > 0) {
			intakeSpeeds = 1;
		} else if (axisRight > 0) {
			intakeSpeeds = -1;
		} else if (axisLeft > 0 && axisRight > 0) {
			intakeSpeeds = 0;
		}
    	
    	intake.setRawSpeeds(intakeSpeeds);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	intake.setState(IntakeState.OPEN);
    	intake.setRawSpeeds(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	intake.setState(IntakeState.OPEN);
    	intake.setRawSpeeds(0);
    }
}
